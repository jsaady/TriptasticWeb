name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/test"
      DATABASE_PASSWORD: postgres
    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: n1hility/cancel-previous-runs@v3
      with: 
        token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Launch app (and store pid)
      run: |
        npm start >> output.log 2>&1 & echo $! > app.pid
        while ! nc -z localhost 3000; do sleep 1; done
      id: app
      timeout-minutes: 1
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    - name: Upload proxy server logs
      uses: actions/upload-artifact@v3
      if: ${{ !cancelled() }}
      with:
          name: proxy-server-output.log
          path: ${{github.workspace}}/output.log
          retention-days: 7
    - name: Kill localhost:3000
      if: always()
      shell: bash
      run: kill -9 `cat app.pid`
      continue-on-error: true
