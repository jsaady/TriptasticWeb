# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  workflow_dispatch:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']
    paths-ignore:
      - 'chart/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG_NAME: latest
  DOMAIN_NAME: ${{ github.repository_owner }}-${{ github.ref_name }}.apps.holyham.cloud

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    container:
      image: node
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Install
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: "postgres://postgres:postgres@postgres:5432/test"
        DATABASE_PASSWORD: postgres
    # - name: Lint
    #   run: npm lint
  build:
    runs-on: triptastic-runner-set
    # runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0 #v3.1.1

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # minimal (short sha)
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          platforms: linux/arm64
  # build_helm:
  #   runs-on: triptastic-runner-set
  #   needs:
  #     - build
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Install Helm
  #       run: |
  #         curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
  #         chmod 700 get_helm.sh
  #         ./get_helm.sh
  #     - name: Login to Helm repo
  #       run: helm registry login ghcr.io/jsaady -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      
  #     - name: Build Helm chart
  #       run: helm package chart

  #     - name: Push Helm chart
  #       run: helm push *.tgz oci://ghcr.io/jsaady

  deploy:
    if: github.ref == 'refs/heads/main'
    permissions: write-all
    runs-on: triptastic-runner-set
    env:
      FULL_IMAGE_TAG: ${{ needs.build.outputs.tags }}
    needs:
      - build
      - test
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH }}
    - name: Replace old image with new image
      run: |
        sed -i "s|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:.*|image: $FULL_IMAGE_TAG|Ig" ./chart/values_dev.yaml
    - name: Push to repo
      run: |
        git config --global user.email "john@holyham.cloud"
        git config --global user.name "John Saady"
        git add ./chart/values_dev.yaml
        git commit -m "Update image tag to $FULL_IMAGE_TAG [skip ci]"
        git push
