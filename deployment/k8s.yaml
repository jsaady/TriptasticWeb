apiVersion: v1
kind: Secret
metadata:
  name: github-image-pull-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiZ2hjci5pbyI6IHsidXNlcm5hbWUiOiAianNhYWR5IiwicGFzc3dvcmQiOiAiZ2hwX3RuZGtoMEVxS2QwUVc3U1hiMEdod3BwVmx0UFhGWjNueHdLOSIsImF1dGgiOiAiYW5OaFlXUjVPbWRvY0Y5MGJtUnJhREJGY1V0a01GRlhOMU5ZWWpCSGFIZHdjRlpzZEZCWVJsb3pibmgzU3prPSJ9fX0K
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noter-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noter
  template:
    metadata:
      labels:
        app: noter
    spec:
      containers:
        - name: noter
          image: ghcr.io/jsaady/noter:
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: static-config
      imagePullSecrets:
        - name: github-image-pull-secret

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noter-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
    - hosts:
        - noter2.holyham.dev
      secretName: noter-tls
  rules:
    - host: noter2.holyham.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: noter-service
                port:
                  number: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: noter-service
spec:
  selector:
    app: noter
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: static-config
data:
  ENVIRONMENT_URL: https://noter2.holyham.dev
  ENVIRONMENT_NAME: dev
  EMAIL_HOST: mail.holyham.cloud
  EMAIL_PORT: "587"
  EMAIL_USER: app@holyham.cloud
  EMAIL_REPLY_TO: app@holyham.cloud
  DATABASE_URL: postgres://postgres:password@postgres-service:5432/app
  DATABASE_PASSWORD: password
  EMAIL_PASSWORD: Oxygen-Glorify1-Designing
  OPENAI_KEY: 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
  OLLAMA_CHAT_MODEL: phi:latest
  OLLAMA_URL: http://ollama-service:11434
  RELEVANT_NOTE_WINDOW_SIZE: "25"

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: ankane/pgvector:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: app
            - name: PGDATA
              value: /var/lib/postgresql/data/k8s
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

--- 

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-pvc
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
        - name: ollama
          image: ollama/ollama:latest
          ports:
            - containerPort: 11434
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - name: ollama-storage
              mountPath: /root/.ollama
      volumes:
        - name: ollama-storage
          persistentVolumeClaim:
            claimName: ollama-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: ollama-service
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
